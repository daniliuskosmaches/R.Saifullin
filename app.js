require('dotenv').config();
const express = require('express');
const path = require('path');
const helmet = require('helmet');
const cors = require('cors');
const rateLimit = require('express-rate-limit');
const nodemailer = require('nodemailer');
const fs = require('fs');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const PORT = process.env.PORT || 3000;
const EMAIL_CONFIG = {
  service: process.env.EMAIL_SERVICE || 'gmail',
  auth: {
    user: process.env.EMAIL_USER,
    pass: process.env.EMAIL_PASS
  },
  from: process.env.EMAIL_FROM || 'no-reply@childparty.com'
};
const MAX_EMAILS_PER_CLIENT = 3;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const app = express();

// –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ —Ñ–∞–π–ª
let bookings = [];
const emailCounts = {};
const DATA_FILE = 'data.json';

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
function loadData() {
  try {
    if (fs.existsSync(DATA_FILE)) {
      const data = JSON.parse(fs.readFileSync(DATA_FILE));
      bookings = data.bookings || [];
      Object.assign(emailCounts, data.emailCounts || {});
      console.log('Data loaded from file');
    }
  } catch (err) {
    console.error('Error loading data:', err);
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function saveData() {
  const data = {
    bookings,
    emailCounts
  };
  fs.writeFileSync(DATA_FILE, JSON.stringify(data));
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email
const transporter = nodemailer.createTransport(EMAIL_CONFIG);

// –ú–∏–¥–ª–≤–∞—Ä—ã
app.use(helmet());
app.use(cors());
app.use(express.json({ limit: '10kb' }));

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (CSS, JS, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –≤–∏–¥–µ–æ)
app.use(express.static(__dirname, {
  setHeaders: (res, filePath) => {
    if (filePath.endsWith('.css')) {
      res.setHeader('Content-Type', 'text/css');
    } else if (filePath.endsWith('.js')) {
      res.setHeader('Content-Type', 'application/javascript');
    } else if (filePath.endsWith('.png') || filePath.endsWith('.jpg') || filePath.endsWith('.jpeg')) {
      res.setHeader('Content-Type', 'image/jpeg');
    } else if (filePath.endsWith('.mp4')) {
      res.setHeader('Content-Type', 'video/mp4');
    }
  }
}));

// –õ–∏–º–∏—Ç–µ—Ä –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è API
app.use('/api/', rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 100,
  message: 'Too many requests, please try again later'
}));

// API: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
app.post('/api/bookings', async (req, res) => {
  try {
    const { name, phone, email, eventDate, childBirthday, packageType, characters = [], shows = [], masterClasses = [], total } = req.body;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!name || !phone || !eventDate || !childBirthday || !packageType) {
      return res.status(400).json({ error: 'Missing required fields' });
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
    const booking = {
      id: Date.now().toString(),
      name,
      phone,
      email,
      eventDate: new Date(eventDate),
      childBirthday: new Date(childBirthday),
      packageType,
      characters,
      shows,
      masterClasses,
      totalPrice: total,
      createdAt: new Date()
    };

    bookings.push(booking);
    saveData();
    console.log(`New booking created: ${booking.id}`);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ email
    if (email) {
      const emailKey = email.toLowerCase();
      emailCounts[emailKey] = (emailCounts[emailKey] || 0) + 1;
      saveData();

      if (emailCounts[emailKey] <= MAX_EMAILS_PER_CLIENT) {
        try {
          await sendConfirmationEmail(booking);
          console.log(`Confirmation email sent to ${email}`);
        } catch (emailError) {
          console.error('Email sending error:', emailError);
        }
      } else {
        console.warn(`Email limit reached for ${email}`);
      }
    }

    res.status(201).json({ success: true, booking });
  } catch (error) {
    console.error('Booking error:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});

// API: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫
app.get('/api/bookings', (req, res) => {
  res.json({ 
    success: true,
    count: bookings.length,
    bookings: bookings.slice(-100)
  });
});

// API: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.get('/api/init-data', (req, res) => {
  res.json({
    characters: charactersData,
    shows: showsData,
    masterClasses: masterClassesData
  });
});

// –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–∏–∑ –≤–∞—à–µ–≥–æ script.js)
const charactersData = [
  { name: "–ß–µ–ª–æ–≤–µ–∫-–ü–∞—É–∫", desc: "–õ—é–±–∏–º—ã–π —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π –¥–µ—Ç–µ–π", image: "/images/—á–µ–ª–æ–≤–µ–∫ –ø–∞—É–∫ –Ω–æ–≤—ã–π.PNG", price: 5000, video: "/videos/spiderman.mp4" },
  { name: "–ñ–µ–ª–µ–∑–Ω—ã–π –ß–µ–ª–æ–≤–µ–∫", desc: "–ì–µ–Ω–∏–π, –º–∏–ª–ª–∏–∞—Ä–¥–µ—Ä, –ø–ª–µ–π–±–æ–π, —Ñ–∏–ª–∞–Ω—Ç—Ä–æ–ø", image: "/images/–∂–µ–ª–µ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫.PNG", price: 6000, video: "/videos/ironman.mp4" },
  { name: "–ë—ç—Ç–≥–µ—Ä–ª", desc: "–û—Ç–≤–∞–∂–Ω–∞—è –≥–µ—Ä–æ–∏–Ω—è –ì–æ—Ç—ç–º–∞", image: "/images/batgerl.PNG", price: 5500, video: "/videos/batgirl.mp4" },
  { name: "–ü—å–µ—Ä–æ", desc: "–ì—Ä—É—Å—Ç–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫–æ–º–µ–¥–∏–∏", image: "/images/IMG_1662.PNG", price: 4500, video: "/videos/piero.mp4" },
  { name: "–≠–ª—å–∑–∞", desc: "–°–Ω–µ–∂–Ω–∞—è –∫–æ—Ä–æ–ª–µ–≤–∞ –∏–∑ –•–æ–ª–æ–¥–Ω–æ–≥–æ —Å–µ—Ä–¥—Ü–∞", image: "/images/—ç–ª—å–∑–∞.PNG", price: 6500, video: "/videos/elsa.mp4" },
  { name: "–ü–∏—Ä–∞—Ç", desc: "–û—Ç–≤–∞–∂–Ω—ã–π –º–æ—Ä—Å–∫–æ–π —Ä–∞–∑–±–æ–π–Ω–∏–∫", image: "/images/–ø–∏—Ä–∞—Ç.PNG", price: 5000, video: "/videos/pirate.mp4" },
  { name: "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä", desc: "–Æ–Ω—ã–π –≤–æ–ª—à–µ–±–Ω–∏–∫ –∏–∑ –•–æ–≥–≤–∞—Ä—Ç—Å–∞", image: "/images/–≥–∞—Ä—Ä–∏ –ø–æ—Ç—Ç–µ—Ä.PNG", price: 6000, video: "/videos/harrypotter.mp4" },
  { name: "–ß–µ—Ä–µ–ø–∞—à–∫–∏ –Ω–∏–Ω–¥–∑—è", desc: "–ß–µ—Ç–≤–µ—Ä–∫–∞ –≥–µ—Ä–æ–µ–≤-–º—É—Ç–∞–Ω—Ç–æ–≤", image: "/images/—á–µ—Ä–µ–ø–∞—à–∫–∏ –Ω–∏–Ω–¥–∑—è.PNG", price: 8000, video: "/videos/tmnt.mp4" },
  { name: "–†—É—Å–∞–ª–æ—á–∫–∞", desc: "–ú–æ—Ä—Å–∫–∞—è –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞", image: "/images/—Ä—É—Å–∞–ª–æ—á–∫–∞.PNG", price: 5500, video: "/videos/mermaid.mp4" },
  { name: "–õ–µ–≥–æ –ù–∏–Ω–¥–∑—è–≥–æ", desc: "–ù–∏–Ω–¥–∑—è –∏–∑ –º–∏—Ä–∞ –õ–µgo", image: "/images/–ª–µ–≥–æ –Ω–∏–Ω–¥–∑—è–≥–æ.PNG", price: 5500, video: "/videos/ninjago.mp4" },
  { name: "–ë–µ–ª–æ—Å–Ω–µ–∂–∫–∞", desc: "–°–∞–º–∞—è –¥–æ–±—Ä–∞—è –ø—Ä–∏–Ω—Ü–µ—Å—Å–∞", image: "/images/–±–µ–ª–æ—Å–Ω–µ–∂–∫–∞.PNG", price: 5500, video: "/videos/snowwhite.mp4" },
  { name: "–õ—É–Ω—Ç–∏–∫", desc: "–î–æ–±—Ä—ã–π –ø—Ä–∏—à–µ–ª–µ—Ü —Å –õ—É–Ω—ã", image: "/images/–ª—É–Ω—Ç–∏–∫.PNG", price: 5000, video: "/videos/luntik.mp4" }
];

const showsData = [
  { name: "–•–∏–º–∏—á–µ—Å–∫–æ–µ –®–æ—É", desc: "–£–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å –∂–∏–¥–∫–∏–º –∞–∑–æ—Ç–æ–º", image: "/images/chemistry.jpeg", price: 10000, video: "/videos/chemistry-show.mp4" },
  { name: "–ë—É–º–∞–∂–Ω–æ–µ –®–æ—É", desc: "–ú—É–∑—ã–∫–∞, —Ç–∞–Ω—Ü—ã –∏ –º–æ—Ä–µ –±—É–º–∞–≥–∏", image: "/images/paper.jpeg", price: 12000, video: "/videos/paper-show.mp4" },
  { name: "–®–æ—É –ü—É–∑—ã—Ä–µ–π", desc: "–í–æ–ª—à–µ–±–Ω—ã–π –º–∏—Ä –æ–≥—Ä–æ–º–Ω—ã—Ö –º—ã–ª—å–Ω—ã—Ö –ø—É–∑—ã—Ä–µ–π", image: "/images/bubble.jpeg", price: 8000, video: "/videos/bubble-show.mp4" },
  { name: "–®–æ—É –º–∞–≥–∏–∏", desc: "–í–æ–ª—à–µ–±–Ω–æ–µ —à–æ—É –¥–ª—è –¥–µ—Ç–µ–π", image: "/images/majic.jpeg", price: 8000, video: "/videos/magic-show.mp4" }
];

const masterClassesData = [
  { name: "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ—Å—Ç—é–º–æ–≤", desc: "–ù–∞—É—á–∏—Ç–µ—Å—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ—Å—Ç—é–º—ã —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏", price: 2500, icon: "‚úÇÔ∏è" },
  { name: "–ê–∫—Ç–µ—Ä—Å–∫–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ", desc: "–û—Å–Ω–æ–≤—ã –ø–µ—Ä–µ–≤–æ–ø–ª–æ—â–µ–Ω–∏—è –≤ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π", price: 3000, icon: "üé≠" },
  { name: "–ì—Ä–∏–º –∏ –º–∞–∫–∏—è–∂", desc: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –≥—Ä–∏–º–∞", price: 2800, icon: "üé®" }
];

// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ - index.html –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'index.html'));
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
async function sendConfirmationEmail(booking) {
  const mailOptions = {
    from: EMAIL_CONFIG.from,
    to: booking.email,
    subject: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!',
    html: `
      <h1>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É!</h1>
      <p>–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é –¥–µ—Ç—Å–∫–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞.</p>
      <h2>–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:</h2>
      <ul>
        <li>–ü–∞–∫–µ—Ç: ${booking.packageType}</li>
        <li>–î–∞—Ç–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: ${new Date(booking.eventDate).toLocaleDateString()}</li>
        <li>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${booking.totalPrice} ‚ÇΩ</li>
      </ul>
      <p>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
    `
  };

  await transporter.sendMail(mailOptions);
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
loadData();
app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
  console.log(`Open in browser: http://localhost:${PORT}`);
});

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
process.on('SIGINT', () => {
  saveData();
  process.exit();
});
